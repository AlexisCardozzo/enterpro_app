name: Flutter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Flutter setup
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.x'
          channel: 'stable'

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
            
      - name: Get dependencies
        run: flutter pub get
        
      - name: Run tests
        run: flutter test
        
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: build/
          
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: my-artifact
          path: ./my-artifact-path
          
      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x' # Or your desired .NET version

      - name: Build and publish .NET source (Placeholder)
        run: |
          echo "Add your .NET build and publish commands here"
          # Example: dotnet restore
          # Example: dotnet build --configuration Release
          # Example: dotnet publish --configuration Release --output ./publish
          
      - name: Setup Node.js environment
        uses: actions/setup-node@v5
        with:
          node-version: '16'
          
      - name: Greet new contributors
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: actions/github-script@v6
        with:
          script: |
            const { data: user } = await github.rest.users.getByUsername({
              username: context.payload.pull_request.user.login
            });
            
            if (user.public_repos == 1) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'Â¡Bienvenido como nuevo contribuidor! Gracias por tu primera PR ðŸŽ‰'
              });
            }